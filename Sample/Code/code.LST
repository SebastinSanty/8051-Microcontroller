C51 COMPILER V9.02   CODE                                                                  05/31/2012 23:13:59 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN code.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE code.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          // ***********************************************************
   2          // Project:   Keypad Interfacing with 8051
   3          // Author:    M.Saeed Yasin
   4          // Module description:  Get input from keypad and display it on LCD
   5          // ***********************************************************
   6          
   7          #include<reg51.h>
   8          
   9          //Function declarations
  10          void cct_init(void);
  11          void delay(int);
  12          void lcdinit(void);
  13          void writecmd(int);
  14          void writedata(char);
  15          void Return(void);
  16          char READ_SWITCHES(void);
  17          char get_key(void);
  18          
  19          //*******************
  20          //Pin description
  21          /*
  22          P2 is data bus
  23          P3.7 is RS
  24          P3.6 is E
  25          P1.0 to P1.3 are keypad row outputs
  26          P1.4 to P1.7 are keypad column inputs
  27          */
  28          //********************
  29          // Define Pins
  30          //********************
  31          sbit RowA = P1^0;     //RowA
  32          sbit RowB = P1^1;     //RowB
  33          sbit RowC = P1^2;     //RowC
  34          sbit RowD = P1^3;     //RowD
  35          
  36          sbit C1   = P1^4;     //Column1
  37          sbit C2   = P1^5;     //Column2
  38          sbit C3   = P1^6;     //Column3
  39          sbit C4   = P1^7;     //Column4
  40          
  41          sbit E    = P3^6;     //E pin for LCD
  42          sbit RS   = P3^7;     //RS pin for LCD
  43          
  44          // ***********************************************************
  45          // Main program
  46          //
  47          int main(void)
  48          {
  49   1         char key;                // key char for keeping record of pressed key
  50   1      
  51   1         cct_init();              // Make input and output pins as required
  52   1         lcdinit();               // Initilize LCD
  53   1      
  54   1         while(1)
  55   1         { 
C51 COMPILER V9.02   CODE                                                                  05/31/2012 23:13:59 PAGE 2   

  56   2           key = get_key();       // Get pressed key
  57   2               writecmd(0x01);        // Clear screen
  58   2               writedata(key);        // Echo the key pressed to LCD
  59   2         }
  60   1      }
  61          
  62          
  63          void cct_init(void)
  64          {
  65   1              P0 = 0x00;   //not used
  66   1              P1 = 0xf0;   //used for generating outputs and taking inputs from Keypad
  67   1              P2 = 0x00;   //used as data port for LCD
  68   1              P3 = 0x00;   //used for RS and E   
  69   1      }
  70          
  71          void delay(int a)
  72          {
  73   1         int i;
  74   1         for(i=0;i<a;i++);   //null statement
  75   1      }
  76          
  77          void writedata(char t)
  78          {
  79   1         RS = 1;             // This is data
  80   1         P2 = t;             //Data transfer
  81   1         E  = 1;             // => E = 1
  82   1         delay(150);
  83   1         E  = 0;             // => E = 0
  84   1         delay(150);
  85   1      }
  86          
  87          
  88          void writecmd(int z)
  89          {
  90   1         RS = 0;             // This is command
  91   1         P2 = z;             //Data transfer
  92   1         E  = 1;             // => E = 1
  93   1         delay(150);
  94   1         E  = 0;             // => E = 0
  95   1         delay(150);
  96   1      }
  97          
  98          void lcdinit(void)
  99          {
 100   1        ///////////// Reset process from datasheet /////////
 101   1           delay(15000);
 102   1         writecmd(0x30);
 103   1           delay(4500);
 104   1         writecmd(0x30);
 105   1           delay(300);
 106   1         writecmd(0x30);
 107   1           delay(650);
 108   1        /////////////////////////////////////////////////////
 109   1         writecmd(0x38);    //function set
 110   1         writecmd(0x0c);    //display on,cursor off,blink off
 111   1         writecmd(0x01);    //clear display
 112   1         writecmd(0x06);    //entry mode, set increment
 113   1      }
 114          
 115          void Return(void)     //Return to 0 location on LCD
 116          {
 117   1        writecmd(0x02);
C51 COMPILER V9.02   CODE                                                                  05/31/2012 23:13:59 PAGE 3   

 118   1          delay(1500);
 119   1      }
 120          
 121          char READ_SWITCHES(void)        
 122          {       
 123   1              RowA = 0; RowB = 1; RowC = 1; RowD = 1;         //Test Row A
 124   1      
 125   1              if (C1 == 0) { delay(10000); while (C1==0); return '7'; }
 126   1              if (C2 == 0) { delay(10000); while (C2==0); return '8'; }
 127   1              if (C3 == 0) { delay(10000); while (C3==0); return '9'; }
 128   1              if (C4 == 0) { delay(10000); while (C4==0); return '/'; }
 129   1      
 130   1              RowA = 1; RowB = 0; RowC = 1; RowD = 1;         //Test Row B
 131   1      
 132   1              if (C1 == 0) { delay(10000); while (C1==0); return '4'; }
 133   1              if (C2 == 0) { delay(10000); while (C2==0); return '5'; }
 134   1              if (C3 == 0) { delay(10000); while (C3==0); return '6'; }
 135   1              if (C4 == 0) { delay(10000); while (C4==0); return 'x'; }
 136   1              
 137   1              RowA = 1; RowB = 1; RowC = 0; RowD = 1;         //Test Row C
 138   1      
 139   1              if (C1 == 0) { delay(10000); while (C1==0); return '1'; }
 140   1              if (C2 == 0) { delay(10000); while (C2==0); return '2'; }
 141   1              if (C3 == 0) { delay(10000); while (C3==0); return '3'; }
 142   1              if (C4 == 0) { delay(10000); while (C4==0); return '-'; }
 143   1              
 144   1              RowA = 1; RowB = 1; RowC = 1; RowD = 0;         //Test Row D
 145   1      
 146   1              if (C1 == 0) { delay(10000); while (C1==0); return 'C'; }
 147   1              if (C2 == 0) { delay(10000); while (C2==0); return '0'; }
 148   1              if (C3 == 0) { delay(10000); while (C3==0); return '='; }
 149   1              if (C4 == 0) { delay(10000); while (C4==0); return '+'; }
 150   1      
 151   1              return 'n';             // Means no key has been pressed
 152   1      }
 153          
 154          char get_key(void)           //get key from user
 155          {
 156   1              char key = 'n';              //assume no key pressed
 157   1      
 158   1              while(key=='n')              //wait untill a key is pressed
 159   1                      key = READ_SWITCHES();   //scan the keys again and again
 160   1      
 161   1              return key;                  //when key pressed then return its value
 162   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    421    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
